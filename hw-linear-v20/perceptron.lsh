; Perceptron learning procedure code
(libload "learner.lsh")

#? * perceptron-solver
(defclass perceptron-solver learner)

(defmethod perceptron-solver name () "Perceptron")
(defmethod perceptron-solver perceptron-solver(dataset)
  (==> this learner dataset)
  (setq l2-regularizer-c [@ 0]))

(defmethod perceptron-solver per-sample-loss (row output)
  ((idx-mul (scalar (- (==> this threshold-f row) (output))) (idx-dot weights row))))

(defmethod perceptron-solver solve ()
  (==> this solve-by-gradient-descent))

(defmethod perceptron-solver gradient (input output)
  (idx-dotm0 input (idx-sub output (scalar (==> this threshold-f row)))))

(defmethod perceptron-solver step-size (iteration-number)
  (let ((c1 4000)(c2 5000))
    (scalar (/ c1 (+ c2 iteration-number)))))
